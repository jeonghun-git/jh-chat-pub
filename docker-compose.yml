# Do not edit this file directly. Use a 'docker-compose.override.yaml' file if you can.
# Refer to `docker-compose.override.yaml.example' for some sample configurations.

services:
  api:
    container_name: jh-chat
    build:
      context: .
      dockerfile: Dockerfile.multi
    ports:
      - '8080:8080'
    depends_on:
      - rag_api
    restart: always
    user: '${UID}:${GID}'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    env_file:
      - .env
    volumes:
      - type: bind
        source: ./.env
        target: /app/.env
      - type: bind
        source: ./librechat.yaml
        target: /app/librechat.yaml
      - ./images:/app/client/public/images
      - ./uploads:/app/uploads
      - ./logs:/app/api/logs
      - ./data:/app/data
    networks:
      - app-network

  meilisearch:
    container_name: chat-meilisearch
    image: getmeili/meilisearch:v1.12.3
    restart: always
    user: '${UID}:${GID}'
    environment:
      - MEILI_HOST=http://meilisearch:7700
      - MEILI_NO_ANALYTICS=true
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY}
    volumes:
      - ./meili_data_v1.12:/meili_data
    networks:
      - app-network

  vectordb:
    container_name: vectordb
    image: ankane/pgvector:latest
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    restart: always
    volumes:
      - pgdata2:/var/lib/postgresql/data
    networks:
      - app-network

  rag_api:
    container_name: rag_api
    image: ghcr.io/danny-avila/librechat-rag-api-dev-lite:latest
    environment:
      - DB_HOST=vectordb
      - RAG_PORT=${RAG_PORT:-8000}
    restart: always
    depends_on:
      - vectordb
    env_file:
      - .env
    networks:
      - app-network

  nginx:
    container_name: jh-chat-nginx
    image: nginx:latest
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx
      - ./nginx/ssl:/etc/nginx/ssl
      - ./client/dist:/usr/share/nginx/html
    depends_on:
      - api
    restart: always
    networks:
      - app-network

volumes:
  pgdata2:

networks:
  app-network:
    driver: bridge